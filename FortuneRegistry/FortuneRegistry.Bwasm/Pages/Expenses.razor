@page "/expenses"
@inject HttpClient Http

<h1>Expenses</h1>

<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#add-expense-modal">
    Add
</button>

<div class="modal fade" id="add-expense-modal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Add Expense</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="amountInput">Amount</label>
                        <input type="number" step="0.10" value="0.00" placeholder="0.00" class="form-control" id="amountInput" />
                    </div>
                    <div class="form-group">
                        <label for="selectExpenseCurrency">Currency</label>
                        <select class="form-control" id="selectExpenseCurrency">
                            <option>USD</option>
                            <option>EUR</option>
                            <option>UAH</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="amountInput">Description</label>
                        <input type="text" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label for="selectCategory">Category</label>
                        <select class="form-control" id="selectCategory">
                            <option>Еда</option>
                            <option>Бытовые</option>
                        </select>
                    </div>
                </form>
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save</button>
            </div>

        </div>
    </div>
</div>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="expenses-main">
        <div class="form-group w-25">

            <label for="selectExpensesListYearAndMonth">Year and month</label>
            <select class="form-control" id="selectExpensesListYearAndMonth">
                <option>2020.01</option>
                <option>2019.12</option>
                <option>2019.11</option>
            </select>
        </div>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col" style="width: 10%">Date</th>
                    <th scope="col" style="width: 15%">Amount</th>
                    <th scope="col">Description</th>
                    <th scope="col">Category</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td scope="row">@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
